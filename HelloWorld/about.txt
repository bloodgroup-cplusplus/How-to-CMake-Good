
Inside the cmake list we see that our target_link_libraries(HelloWorld PRIVATE say-hello)
is a private package

Whenever we run the make command the default for add libraries is to make STATIC LIBRARY
But we can specify the library type and library name. If we specify shared 
add_library(
  say-hello SHARED
  hello.hpp
  hello.cpp
  ) 
  SHARED  library is created
  
  Our program still runs well
  
  
  THIS IS MY TERMINAL COPY PASTE FILE 
  
  howtoCMakeGood-1a-A/build$ ldd howtoCMakeGood-1a-A
	linux-vdso.so.1 (0x00007ffe9dd57000)
	libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007fb1d3ff6000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fb1d3e0a000)
	libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fb1d3cbc000)
	/lib64/ld-linux-x86-64.so.2 (0x00007fb1d4229000)
	libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007fb1d3ca1000)


  If we change the shared type to static and run the build, It will link the static library saying hello
  Saying exactly like it did when we did not specify what to do
  
  But if we do this 
  
  add_library( MODULE
    hello.hpp
    hello.cpp
    )
    
   and go inside the build and run the make command than we find that target libraries don't work similarly on module libraries
   Default is always static.
   CMAKE is able to change the default 
   
   
   SNAPSHOT OF MY TERMINAL

trycatch@trycatch-VirtualBox:~/howtoCMakeGood-1a-A$ cmake -D BUILD_SHARED_LIBS=TRUE
